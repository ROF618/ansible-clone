---
- hosts: localhost
  become: yes
  become_method: sudo

  tasks:
    - name: Install packages
      ansible.builtin.package:
        name:
         - "AtomicParsley"
         - "aajohan-comfortaa-fonts"
         - "alacritty"
         - "anaconda"
         - "anaconda-install-env-deps"
         - "anaconda-live"
         - "android-tools"
         - "ansible"
         - "autorandr"
         - "bat"
         - "binwalk"
         - "blender"
         - "brightnessctl"
         - "cmake"
         - "conky"
         - "cronie"
         - "cronie-anacron"
         - "crontabs"
         - "dmenu"
         - "dracut-live"
         - "dunst"
         - "exif"
         - "eza"
         - "fd-find"
         - "feh"
         - "flameshot"
         - "fzf"
         - "gcc"
         - "gcc-c++"
         - "gnome-tweaks"
         - "gnuplot"
         - "golang-x-tools-gopls"
         - "google-chrome-stable"
         - "htop"
         - "kernel"
         - "kernel-core"
         - "kernel-devel"
         - "kernel-modules"
         - "kernel-modules-core"
         - "kernel-modules-extra"
         - "langpacks-en"
         - "lftp"
         - "libX11-devel"
         - "libXcomposite-devel"
         - "libffi-devel"
         - "libstdc++-devel"
         - "livesys-scripts"
         - "neofetch"
         - "neovim"
         - "network-manager-applet"
         - "nodejs"
         - "nodejs-docs"
         - "nodejs-full-i18n"
         - "nodejs-libs"
         - "nodejs-npm"
         - "pavucontrol"
         - "perl-Image-ExifTool"
         - "picom"
         - "powerline"
         - "pypy"
         - "python3-devel"
         - "python3-pip"
         - "ranger"
         - "restic"
         - "ripgrep"
         - "slock"
         - "steam"
         - "steghide"
         - "timeshift"
         - "tldr"
         - "torbrowser-launcher"
         - "units"
         - "unrar"
         - "vagrant"
         - "vim-X11"
         - "vim-enhanced"
         - "vlc"
         - "xautolock"
         - "yarnpkg"
         - "zathura"
        state: present

    - name: Copy /home/t66/.config/alacritty/alacritty.toml
      copy:
        dest: /home/t66/.config/alacritty/alacritty.toml
        owner: t66
        mode: 33188
        content: |
          #"window.opactiy" = 0.55

          [colors.bright]
          black = "#444b6a"
          blue = "#7da6ff"
          cyan = "#0db9d7"
          green = "#b9f27c"
          magenta = "#bb9af7"
          red = "#ff7a93"
          white = "#acb0d0"
          yellow = "#ff9e64"

          [colors.normal]
          black = "#32344a"
          blue = "#7aa2f7"
          cyan = "#449dab"
          green = "#9ece6a"
          magenta = "#ad8ee6"
          red = "#f7768e"
          white = "#787c99"
          yellow = "#e0af68"

          [colors.primary]
          background = "#1a1b26"
          foreground = "#a9b1d6"

          [cursor.style]
          blinking = "Always"

          [scrolling]
          history = 10000

          [window]
          opacity = 0.85

    - name: Copy /home/t66/.config/neofetch/config.conf
      copy:
        dest: /home/t66/.config/neofetch/config.conf
        owner: t66
        mode: 33188
        content: |
          # See this wiki page for more info:
          # https://github.com/dylanaraps/neofetch/wiki/Customizing-Info
          print_info() {
              info title
              info underline

              info "OS" distro
              info "Host" model
              info "Kernel" kernel
              info "Uptime" uptime
              info "Packages" packages
              info "Shell" shell
              info "Resolution" resolution
              info "DE" de
          #    info "WM" wm
          #    info "WM Theme" wm_theme
          #    info "Theme" theme
          #    info "Icons" icons
              info "Terminal" term
              info "Terminal Font" term_font
              info "CPU" cpu
              info "GPU" gpu
              info "Memory" memory

              # info "GPU Driver" gpu_driver  # Linux/macOS only
              # info "CPU Usage" cpu_usage
              info "Disk" disk
              # info "Battery" battery
              # info "Font" font
              # info "Song" song
              # [[ "$player" ]] && prin "Music Player" "$player"
              # info "Local IP" local_ip
              # info "Public IP" public_ip
              # info "Users" users
              # info "Locale" locale  # This only works on glibc systems.

              info cols
          }

          # Title


          # Hide/Show Fully qualified domain name.
          #
          # Default:  'off'
          # Values:   'on', 'off'
          # Flag:     --title_fqdn
          title_fqdn="off"


          # Kernel


          # Shorten the output of the kernel function.
          #
          # Default:  'on'
          # Values:   'on', 'off'
          # Flag:     --kernel_shorthand
          # Supports: Everything except *BSDs (except PacBSD and PC-BSD)
          #
          # Example:
          # on:  '4.8.9-1-ARCH'
          # off: 'Linux 4.8.9-1-ARCH'
          kernel_shorthand="on"


          # Distro


          # Shorten the output of the distro function
          #
          # Default:  'off'
          # Values:   'on', 'tiny', 'off'
          # Flag:     --distro_shorthand
          # Supports: Everything except Windows and Haiku
          distro_shorthand="off"

          # Show/Hide OS Architecture.
          # Show 'x86_64', 'x86' and etc in 'Distro:' output.
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --os_arch
          #
          # Example:
          # on:  'Arch Linux x86_64'
          # off: 'Arch Linux'
          os_arch="on"


          # Uptime


          # Shorten the output of the uptime function
          #
          # Default: 'on'
          # Values:  'on', 'tiny', 'off'
          # Flag:    --uptime_shorthand
          #
          # Example:
          # on:   '2 days, 10 hours, 3 mins'
          # tiny: '2d 10h 3m'
          # off:  '2 days, 10 hours, 3 minutes'
          uptime_shorthand="on"


          # Memory


          # Show memory pecentage in output.
          #
          # Default: 'off'
          # Values:  'on', 'off'
          # Flag:    --memory_percent
          #
          # Example:
          # on:   '1801MiB / 7881MiB (22%)'
          # off:  '1801MiB / 7881MiB'
          memory_percent="off"

          # Change memory output unit.
          #
          # Default: 'mib'
          # Values:  'kib', 'mib', 'gib'
          # Flag:    --memory_unit
          #
          # Example:
          # kib  '1020928KiB / 7117824KiB'
          # mib  '1042MiB / 6951MiB'
          # gib: ' 0.98GiB / 6.79GiB'
          memory_unit="mib"


          # Packages


          # Show/Hide Package Manager names.
          #
          # Default: 'tiny'
          # Values:  'on', 'tiny' 'off'
          # Flag:    --package_managers
          #
          # Example:
          # on:   '998 (pacman), 8 (flatpak), 4 (snap)'
          # tiny: '908 (pacman, flatpak, snap)'
          # off:  '908'
          package_managers="on"


          # Shell


          # Show the path to $SHELL
          #
          # Default: 'off'
          # Values:  'on', 'off'
          # Flag:    --shell_path
          #
          # Example:
          # on:  '/bin/bash'
          # off: 'bash'
          shell_path="off"

          # Show $SHELL version
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --shell_version
          #
          # Example:
          # on:  'bash 4.4.5'
          # off: 'bash'
          shell_version="on"


          # CPU


          # CPU speed type
          #
          # Default: 'bios_limit'
          # Values: 'scaling_cur_freq', 'scaling_min_freq', 'scaling_max_freq', 'bios_limit'.
          # Flag:    --speed_type
          # Supports: Linux with 'cpufreq'
          # NOTE: Any file in '/sys/devices/system/cpu/cpu0/cpufreq' can be used as a value.
          speed_type="bios_limit"

          # CPU speed shorthand
          #
          # Default: 'off'
          # Values: 'on', 'off'.
          # Flag:    --speed_shorthand
          # NOTE: This flag is not supported in systems with CPU speed less than 1 GHz
          #
          # Example:
          # on:    'i7-6500U (4) @ 3.1GHz'
          # off:   'i7-6500U (4) @ 3.100GHz'
          speed_shorthand="off"

          # Enable/Disable CPU brand in output.
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --cpu_brand
          #
          # Example:
          # on:   'Intel i7-6500U'
          # off:  'i7-6500U (4)'
          cpu_brand="on"

          # CPU Speed
          # Hide/Show CPU speed.
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --cpu_speed
          #
          # Example:
          # on:  'Intel i7-6500U (4) @ 3.1GHz'
          # off: 'Intel i7-6500U (4)'
          cpu_speed="on"

          # CPU Cores
          # Display CPU cores in output
          #
          # Default: 'logical'
          # Values:  'logical', 'physical', 'off'
          # Flag:    --cpu_cores
          # Support: 'physical' doesn't work on BSD.
          #
          # Example:
          # logical:  'Intel i7-6500U (4) @ 3.1GHz' (All virtual cores)
          # physical: 'Intel i7-6500U (2) @ 3.1GHz' (All physical cores)
          # off:      'Intel i7-6500U @ 3.1GHz'
          cpu_cores="logical"

          # CPU Temperature
          # Hide/Show CPU temperature.
          # Note the temperature is added to the regular CPU function.
          #
          # Default: 'off'
          # Values:  'C', 'F', 'off'
          # Flag:    --cpu_temp
          # Supports: Linux, BSD
          # NOTE: For FreeBSD and NetBSD-based systems, you'll need to enable
          #       coretemp kernel module. This only supports newer Intel processors.
          #
          # Example:
          # C:   'Intel i7-6500U (4) @ 3.1GHz [27.2°C]'
          # F:   'Intel i7-6500U (4) @ 3.1GHz [82.0°F]'
          # off: 'Intel i7-6500U (4) @ 3.1GHz'
          cpu_temp="off"


          # GPU


          # Enable/Disable GPU Brand
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --gpu_brand
          #
          # Example:
          # on:  'AMD HD 7950'
          # off: 'HD 7950'
          gpu_brand="on"

          # Which GPU to display
          #
          # Default: 'all'
          # Values:  'all', 'dedicated', 'integrated'
          # Flag:    --gpu_type
          # Supports: Linux
          #
          # Example:
          # all:
          #   GPU1: AMD HD 7950
          #   GPU2: Intel Integrated Graphics
          #
          # dedicated:
          #   GPU1: AMD HD 7950
          #
          # integrated:
          #   GPU1: Intel Integrated Graphics
          gpu_type="all"


          # Resolution


          # Display refresh rate next to each monitor
          # Default: 'off'
          # Values:  'on', 'off'
          # Flag:    --refresh_rate
          # Supports: Doesn't work on Windows.
          #
          # Example:
          # on:  '1920x1080 @ 60Hz'
          # off: '1920x1080'
          refresh_rate="off"


          # Gtk Theme / Icons / Font


          # Shorten output of GTK Theme / Icons / Font
          #
          # Default: 'off'
          # Values:  'on', 'off'
          # Flag:    --gtk_shorthand
          #
          # Example:
          # on:  'Numix, Adwaita'
          # off: 'Numix [GTK2], Adwaita [GTK3]'
          gtk_shorthand="off"


          # Enable/Disable gtk2 Theme / Icons / Font
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --gtk2
          #
          # Example:
          # on:  'Numix [GTK2], Adwaita [GTK3]'
          # off: 'Adwaita [GTK3]'
          gtk2="on"

          # Enable/Disable gtk3 Theme / Icons / Font
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --gtk3
          #
          # Example:
          # on:  'Numix [GTK2], Adwaita [GTK3]'
          # off: 'Numix [GTK2]'
          gtk3="on"


          # IP Address


          # Website to ping for the public IP
          #
          # Default: 'http://ident.me'
          # Values:  'url'
          # Flag:    --ip_host
          public_ip_host="http://ident.me"

          # Public IP timeout.
          #
          # Default: '2'
          # Values:  'int'
          # Flag:    --ip_timeout
          public_ip_timeout=2


          # Desktop Environment


          # Show Desktop Environment version
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --de_version
          de_version="on"


          # Disk


          # Which disks to display.
          # The values can be any /dev/sdXX, mount point or directory.
          # NOTE: By default we only show the disk info for '/'.
          #
          # Default: '/'
          # Values:  '/', '/dev/sdXX', '/path/to/drive'.
          # Flag:    --disk_show
          #
          # Example:
          # disk_show=('/' '/dev/sdb1'):
          #      'Disk (/): 74G / 118G (66%)'
          #      'Disk (/mnt/Videos): 823G / 893G (93%)'
          #
          # disk_show=('/'):
          #      'Disk (/): 74G / 118G (66%)'
          #
          disk_show=('/')

          # Disk subtitle.
          # What to append to the Disk subtitle.
          #
          # Default: 'mount'
          # Values:  'mount', 'name', 'dir', 'none'
          # Flag:    --disk_subtitle
          #
          # Example:
          # name:   'Disk (/dev/sda1): 74G / 118G (66%)'
          #         'Disk (/dev/sdb2): 74G / 118G (66%)'
          #
          # mount:  'Disk (/): 74G / 118G (66%)'
          #         'Disk (/mnt/Local Disk): 74G / 118G (66%)'
          #         'Disk (/mnt/Videos): 74G / 118G (66%)'
          #
          # dir:    'Disk (/): 74G / 118G (66%)'
          #         'Disk (Local Disk): 74G / 118G (66%)'
          #         'Disk (Videos): 74G / 118G (66%)'
          #
          # none:   'Disk: 74G / 118G (66%)'
          #         'Disk: 74G / 118G (66%)'
          #         'Disk: 74G / 118G (66%)'
          disk_subtitle="mount"

          # Disk percent.
          # Show/Hide disk percent.
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --disk_percent
          #
          # Example:
          # on:  'Disk (/): 74G / 118G (66%)'
          # off: 'Disk (/): 74G / 118G'
          disk_percent="on"


          # Song


          # Manually specify a music player.
          #
          # Default: 'auto'
          # Values:  'auto', 'player-name'
          # Flag:    --music_player
          #
          # Available values for 'player-name':
          #
          # amarok
          # audacious
          # banshee
          # bluemindo
          # clementine
          # cmus
          # deadbeef
          # deepin-music
          # dragon
          # elisa
          # exaile
          # gnome-music
          # gmusicbrowser
          # gogglesmm
          # guayadeque
          # io.elementary.music
          # iTunes
          # juk
          # lollypop
          # mocp
          # mopidy
          # mpd
          # muine
          # netease-cloud-music
          # olivia
          # playerctl
          # pogo
          # pragha
          # qmmp
          # quodlibet
          # rhythmbox
          # sayonara
          # smplayer
          # spotify
          # strawberry
          # tauonmb
          # tomahawk
          # vlc
          # xmms2d
          # xnoise
          # yarock
          music_player="auto"

          # Format to display song information.
          #
          # Default: '%artist% - %album% - %title%'
          # Values:  '%artist%', '%album%', '%title%'
          # Flag:    --song_format
          #
          # Example:
          # default: 'Song: Jet - Get Born - Sgt Major'
          song_format="%artist% - %album% - %title%"

          # Print the Artist, Album and Title on separate lines
          #
          # Default: 'off'
          # Values:  'on', 'off'
          # Flag:    --song_shorthand
          #
          # Example:
          # on:  'Artist: The Fratellis'
          #      'Album: Costello Music'
          #      'Song: Chelsea Dagger'
          #
          # off: 'Song: The Fratellis - Costello Music - Chelsea Dagger'
          song_shorthand="off"

          # 'mpc' arguments (specify a host, password etc).
          #
          # Default:  ''
          # Example: mpc_args=(-h HOST -P PASSWORD)
          mpc_args=()


          # Text Colors


          # Text Colors
          #
          # Default:  'distro'
          # Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num'
          # Flag:     --colors
          #
          # Each number represents a different part of the text in
          # this order: 'title', '@', 'underline', 'subtitle', 'colon', 'info'
          #
          # Example:
          # colors=(distro)      - Text is colored based on Distro colors.
          # colors=(4 6 1 8 8 6) - Text is colored in the order above.
          colors=(distro)


          # Text Options


          # Toggle bold text
          #
          # Default:  'on'
          # Values:   'on', 'off'
          # Flag:     --bold
          bold="on"

          # Enable/Disable Underline
          #
          # Default:  'on'
          # Values:   'on', 'off'
          # Flag:     --underline
          underline_enabled="on"

          # Underline character
          #
          # Default:  '-'
          # Values:   'string'
          # Flag:     --underline_char
          underline_char="-"


          # Info Separator
          # Replace the default separator with the specified string.
          #
          # Default:  ':'
          # Flag:     --separator
          #
          # Example:
          # separator="->":   'Shell-> bash'
          # separator=" =":   'WM = dwm'
          separator=":"


          # Color Blocks


          # Color block range
          # The range of colors to print.
          #
          # Default:  '0', '15'
          # Values:   'num'
          # Flag:     --block_range
          #
          # Example:
          #
          # Display colors 0-7 in the blocks.  (8 colors)
          # neofetch --block_range 0 7
          #
          # Display colors 0-15 in the blocks. (16 colors)
          # neofetch --block_range 0 15
          block_range=(0 15)

          # Toggle color blocks
          #
          # Default:  'on'
          # Values:   'on', 'off'
          # Flag:     --color_blocks
          color_blocks="on"

          # Color block width in spaces
          #
          # Default:  '3'
          # Values:   'num'
          # Flag:     --block_width
          block_width=3

          # Color block height in lines
          #
          # Default:  '1'
          # Values:   'num'
          # Flag:     --block_height
          block_height=1

          # Color Alignment
          #
          # Default: 'auto'
          # Values: 'auto', 'num'
          # Flag: --col_offset
          #
          # Number specifies how far from the left side of the terminal (in spaces) to
          # begin printing the columns, in case you want to e.g. center them under your
          # text.
          # Example:
          # col_offset="auto" - Default behavior of neofetch
          # col_offset=7      - Leave 7 spaces then print the colors
          col_offset="auto"

          # Progress Bars


          # Bar characters
          #
          # Default:  '-', '='
          # Values:   'string', 'string'
          # Flag:     --bar_char
          #
          # Example:
          # neofetch --bar_char 'elapsed' 'total'
          # neofetch --bar_char '-' '='
          bar_char_elapsed="-"
          bar_char_total="="

          # Toggle Bar border
          #
          # Default:  'on'
          # Values:   'on', 'off'
          # Flag:     --bar_border
          bar_border="on"

          # Progress bar length in spaces
          # Number of chars long to make the progress bars.
          #
          # Default:  '15'
          # Values:   'num'
          # Flag:     --bar_length
          bar_length=15

          # Progress bar colors
          # When set to distro, uses your distro's logo colors.
          #
          # Default:  'distro', 'distro'
          # Values:   'distro', 'num'
          # Flag:     --bar_colors
          #
          # Example:
          # neofetch --bar_colors 3 4
          # neofetch --bar_colors distro 5
          bar_color_elapsed="distro"
          bar_color_total="distro"


          # Info display
          # Display a bar with the info.
          #
          # Default: 'off'
          # Values:  'bar', 'infobar', 'barinfo', 'off'
          # Flags:   --cpu_display
          #          --memory_display
          #          --battery_display
          #          --disk_display
          #
          # Example:
          # bar:     '[---=======]'
          # infobar: 'info [---=======]'
          # barinfo: '[---=======] info'
          # off:     'info'
          cpu_display="off"
          memory_display="off"
          battery_display="off"
          disk_display="off"


          # Backend Settings


          # Image backend.
          #
          # Default:  'ascii'
          # Values:   'ascii', 'caca', 'chafa', 'jp2a', 'iterm2', 'off',
          #           'pot', 'termpix', 'pixterm', 'tycat', 'w3m', 'kitty'
          # Flag:     --backend
          image_backend="ascii"

          # Image Source
          #
          # Which image or ascii file to display.
          #
          # Default:  'auto'
          # Values:   'auto', 'ascii', 'wallpaper', '/path/to/img', '/path/to/ascii', '/path/to/dir/'
          #           'command output (neofetch --ascii "$(fortune | cowsay -W 30)")'
          # Flag:     --source
          #
          # NOTE: 'auto' will pick the best image source for whatever image backend is used.
          #       In ascii mode, distro ascii art will be used and in an image mode, your
          #       wallpaper will be used.
          image_source="auto"


          # Ascii Options


          # Ascii distro
          # Which distro's ascii art to display.
          #
          # Default: 'auto'
          # Values:  'auto', 'distro_name'
          # Flag:    --ascii_distro
          # NOTE: AIX, Alpine, Anarchy, Android, Antergos, antiX, "AOSC OS",
          #       "AOSC OS/Retro", Apricity, ArcoLinux, ArchBox, ARCHlabs,
          #       ArchStrike, XFerience, ArchMerge, Arch, Artix, Arya, Bedrock,
          #       Bitrig, BlackArch, BLAG, BlankOn, BlueLight, bonsai, BSD,
          #       BunsenLabs, Calculate, Carbs, CentOS, Chakra, ChaletOS,
          #       Chapeau, Chrom*, Cleanjaro, ClearOS, Clear_Linux, Clover,
          #       Condres, Container_Linux, CRUX, Cucumber, Debian, Deepin,
          #       DesaOS, Devuan, DracOS, DarkOs, DragonFly, Drauger, Elementary,
          #       EndeavourOS, Endless, EuroLinux, Exherbo, Fedora, Feren, FreeBSD,
          #       FreeMiNT, Frugalware, Funtoo, GalliumOS, Garuda, Gentoo, Pentoo,
          #       gNewSense, GNOME, GNU, GoboLinux, Grombyang, Guix, Haiku, Huayra,
          #       Hyperbola, janus, Kali, KaOS, KDE_neon, Kibojoe, Kogaion,
          #       Korora, KSLinux, Kubuntu, LEDE, LFS, Linux_Lite,
          #       LMDE, Lubuntu, Lunar, macos, Mageia, MagpieOS, Mandriva,
          #       Manjaro, Maui, Mer, Minix, LinuxMint, MX_Linux, Namib,
          #       Neptune, NetBSD, Netrunner, Nitrux, NixOS, Nurunner,
          #       NuTyX, OBRevenge, OpenBSD, openEuler, OpenIndiana, openmamba,
          #       OpenMandriva, OpenStage, OpenWrt, osmc, Oracle, OS Elbrus, PacBSD,
          #       Parabola, Pardus, Parrot, Parsix, TrueOS, PCLinuxOS, Peppermint,
          #       popos, Porteus, PostMarketOS, Proxmox, Puppy, PureOS, Qubes, Radix,
          #       Raspbian, Reborn_OS, Redstar, Redcore, Redhat, Refracted_Devuan,
          #       Regata, Rosa, sabotage, Sabayon, Sailfish, SalentOS, Scientific,
          #       Septor, SereneLinux, SharkLinux, Siduction, Slackware, SliTaz,
          #       SmartOS, Solus, Source_Mage, Sparky, Star, SteamOS, SunOS,
          #       openSUSE_Leap, openSUSE_Tumbleweed, openSUSE, SwagArch, Tails,
          #       Trisquel, Ubuntu-Budgie, Ubuntu-GNOME, Ubuntu-MATE, Ubuntu-Studio,
          #       Ubuntu, Venom, Void, Obarun, windows10, Windows7, Xubuntu, Zorin,
          #       and IRIX have ascii logos
          # NOTE: Arch, Ubuntu, Redhat, and Dragonfly have 'old' logo variants.
          #       Use '{distro name}_old' to use the old logos.
          # NOTE: Ubuntu has flavor variants.
          #       Change this to Lubuntu, Kubuntu, Xubuntu, Ubuntu-GNOME,
          #       Ubuntu-Studio, Ubuntu-Mate  or Ubuntu-Budgie to use the flavors.
          # NOTE: Arcolinux, Dragonfly, Fedora, Alpine, Arch, Ubuntu,
          #       CRUX, Debian, Gentoo, FreeBSD, Mac, NixOS, OpenBSD, android,
          #       Antrix, CentOS, Cleanjaro, ElementaryOS, GUIX, Hyperbola,
          #       Manjaro, MXLinux, NetBSD, Parabola, POP_OS, PureOS,
          #       Slackware, SunOS, LinuxLite, OpenSUSE, Raspbian,
          #       postmarketOS, and Void have a smaller logo variant.
          #       Use '{distro name}_small' to use the small variants.
          ascii_distro="auto"

          # Ascii Colors
          #
          # Default:  'distro'
          # Values:   'distro', 'num' 'num' 'num' 'num' 'num' 'num'
          # Flag:     --ascii_colors
          #
          # Example:
          # ascii_colors=(distro)      - Ascii is colored based on Distro colors.
          # ascii_colors=(4 6 1 8 8 6) - Ascii is colored using these colors.
          ascii_colors=(distro)

          # Bold ascii logo
          # Whether or not to bold the ascii logo.
          #
          # Default: 'on'
          # Values:  'on', 'off'
          # Flag:    --ascii_bold
          ascii_bold="on"


          # Image Options


          # Image loop
          # Setting this to on will make neofetch redraw the image constantly until
          # Ctrl+C is pressed. This fixes display issues in some terminal emulators.
          #
          # Default:  'off'
          # Values:   'on', 'off'
          # Flag:     --loop
          image_loop="off"

          # Thumbnail directory
          #
          # Default: '~/.cache/thumbnails/neofetch'
          # Values:  'dir'
          thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"

          # Crop mode
          #
          # Default:  'normal'
          # Values:   'normal', 'fit', 'fill'
          # Flag:     --crop_mode
          #
          # See this wiki page to learn about the fit and fill options.
          # https://github.com/dylanaraps/neofetch/wiki/What-is-Waifu-Crop%3F
          crop_mode="normal"

          # Crop offset
          # Note: Only affects 'normal' crop mode.
          #
          # Default:  'center'
          # Values:   'northwest', 'north', 'northeast', 'west', 'center'
          #           'east', 'southwest', 'south', 'southeast'
          # Flag:     --crop_offset
          crop_offset="center"

          # Image size
          # The image is half the terminal width by default.
          #
          # Default: 'auto'
          # Values:  'auto', '00px', '00%', 'none'
          # Flags:   --image_size
          #          --size
          image_size="auto"

          # Gap between image and text
          #
          # Default: '3'
          # Values:  'num', '-num'
          # Flag:    --gap
          gap=3

          # Image offsets
          # Only works with the w3m backend.
          #
          # Default: '0'
          # Values:  'px'
          # Flags:   --xoffset
          #          --yoffset
          yoffset=0
          xoffset=0

          # Image background color
          # Only works with the w3m backend.
          #
          # Default: ''
          # Values:  'color', 'blue'
          # Flag:    --bg_color
          background_color=


          # Misc Options

          # Stdout mode
          # Turn off all colors and disables image backend (ASCII/Image).
          # Useful for piping into another command.
          # Default: 'off'
          # Values: 'on', 'off'
          stdout="off"

    - name: Copy /home/t66/.config/nvim/init.lua
      copy:
        dest: /home/t66/.config/nvim/init.lua
        owner: t66
        mode: 33188
        content: |
          -- disable netrw at the very start of your init.lua
          vim.g.loaded_netrw = 1
          vim.g.loaded_netrwPlugin = 1

          -- setting case insensitive
          vim.opt.ignorecase = true


          -- set termguicolors to enable highlight groups
          -- vim.opt.termguicolors = true

          -- empty setup using defaults
          require("nvim-tree").setup()

          -- OR setup with some options
          require("nvim-tree").setup({
            sort = {
              sorter = "case_sensitive",
            },
            view = {
              width = 30,
            },
            renderer = {
              group_empty = true,
            },
            filters = {
              dotfiles = true,
            },
          })

          -- Persistent Undo Swap Files Backup

          local prefix = vim.env.XDG_CONFIG_HOME or vim.fn.expand("~/.config")

          vim.opt.undodir = { prefix .. "/nvim/.undo//"}

          vim.opt.backupdir = {prefix .. "/nvim/.backup//"}

          vim.opt.directory = { prefix .. "/nvim/.swp//"}

          vim.bo.undofile=true

          --test

          -- Keymaping for Telescope
          local builtin = require('telescope.builtin')
          vim.keymap.set('n', '<leader>ff', builtin.find_files, {})
          vim.keymap.set('n', '<leader>fg', builtin.live_grep, {})
          vim.keymap.set('n', '<leader>fb', builtin.buffers, {})
          vim.keymap.set('n', '<leader>fh', builtin.help_tags, {})

          -- Map F5 to toggle NvimTree
          vim.api.nvim_set_keymap('n', '<F5>', ':NvimTreeToggle<CR>', { noremap = true, silent = true })
          vim.api.nvim_create_autocmd("BufEnter", {
          	group = vim.api.nvim_create_augroup("NvimTreeClose", {clear = true}),
          	callback = function()
          		local layout = vim.api.nvim_call_function("winlayout", {})
          		if layout[1] == "leaf" and vim.api.nvim_buf_get_option(vim.api.nvim_win_get_buf(layout[2]), "filetype") == "NvimTree" and layout[3] == nil then vim.cmd("quit") end
          	end
          })
          --vim.cmd("NvimTreeOpen")
          vim.o.confirm = true



          vim.g.mapleader = "\\"
          vim.g.maplocalleader = "\\"
          -- Enable system clipboard support
          vim.opt.clipboard:append("unnamedplus")

          -- Enable line numbers and relative line numbers
          vim.opt.number = true
          vim.opt.relativenumber = true

          -- Split navigations
          vim.api.nvim_set_keymap('n', '<C-J>', '<C-W><C-J>', { silent = true })
          vim.api.nvim_set_keymap('n', '<C-K>', '<C-W><C-K>', { silent = true })
          vim.api.nvim_set_keymap('n', '<C-L>', '<C-W><C-L>', { silent = true })
          vim.api.nvim_set_keymap('n', '<C-H>', '<C-W><C-H>', { silent = true })

          require("plugins")

          -- Setting up LSP servers
          require'lspconfig'.pyright.setup{}
          require'lspconfig'.tsserver.setup{}
          require'lspconfig'.gopls.setup{}

          -- Autocomplete
          require('nvim-cmp')

    - name: Copy /home/t66/.config/nvim/lua/plugins.lua
      copy:
        dest: /home/t66/.config/nvim/lua/plugins.lua
        owner: t66
        mode: 33188
        content: |
          local fn = vim.fn-- Automatically install packer
          local install_path = fn.stdpath("data") .. "/site/pack/packer/start/packer.nvim"
          if fn.empty(fn.glob(install_path)) > 0 then
          	PACKER_BOOTSTRAP = fn.system({
          		"git",
          		"clone",
          		"--depth",
          		"1",
          		"https://github.com/wbthomason/packer.nvim",
          		install_path,
          	})
          	print("Installing packer close and reopen Neovim...")
          	vim.cmd([[packadd packer.nvim]])
          end

          -- Autocommand that reloads neovim whenever you save the plugins.lua file
          vim.cmd([[
          	augroup packer_user_config
          		autocmd!
          		autocmd BufWritePost plugins.lua source <afile> | PackerSync
          		augroup end
          	]])

          -- Use a protected call so we don't error out on first use
          local status_ok, packer = pcall(require, "packer")
          if not status_ok then
          	return
          end

          -- Have packer use a popup window
          packer.init({
          	display = {
          		open_fn = function()
          			return require("packer.util").float({ border = "rounded" })
          		end,
          	},
          })

          -- Install your plugins here
          return packer.startup(function(use)
          	use ("wbthomason/packer.nvim") -- Have packer manage itself

          	use {
          	    "williamboman/mason.nvim"
          	}

          	use {
          	  'VonHeikemen/lsp-zero.nvim',
          	  branch = 'v3.x',
          	  requires = {
          	    --- Uncomment these if you want to manage the language servers from neovim
          	    -- {'williamboman/mason.nvim'},
          	    -- {'williamboman/mason-lspconfig.nvim'},

          	    -- LSP Support
          	    {'neovim/nvim-lspconfig'},
          	    -- Autocompletion
          	    {'hrsh7th/nvim-cmp'},
          	    {'hrsh7th/cmp-nvim-lsp'},
          	    {'L3MON4D3/LuaSnip'},
          	  }
          	}
          	use "nvim-lua/plenary.nvim"
          	use {
          	  'nvim-telescope/telescope.nvim', tag = '0.1.5',
          	-- or                            , branch = '0.1.x',
          	  requires = { {'nvim-lua/plenary.nvim'} }
          	}
          	use {
          	  'nvim-tree/nvim-tree.lua',
          	  requires = {
          	    'nvim-tree/nvim-web-devicons', -- optional
          	  },
          	}

          	if PACKER_BOOTSTRAP then
          		require("packer").sync()
          	end
          end)

    - name: Copy /home/t66/.config/nvim/plugin/packer_compiled.lua
      copy:
        dest: /home/t66/.config/nvim/plugin/packer_compiled.lua
        owner: t66
        mode: 33188
        content: |
          -- Automatically generated packer.nvim plugin loader code

          if vim.api.nvim_call_function('has', {'nvim-0.5'}) ~= 1 then
            vim.api.nvim_command('echohl WarningMsg | echom "Invalid Neovim version for packer.nvim! | echohl None"')
            return
          end

          vim.api.nvim_command('packadd packer.nvim')

          local no_errors, error_msg = pcall(function()

          _G._packer = _G._packer or {}
          _G._packer.inside_compile = true

          local time
          local profile_info
          local should_profile = false
          if should_profile then
            local hrtime = vim.loop.hrtime
            profile_info = {}
            time = function(chunk, start)
              if start then
                profile_info[chunk] = hrtime()
              else
                profile_info[chunk] = (hrtime() - profile_info[chunk]) / 1e6
              end
            end
          else
            time = function(chunk, start) end
          end

          local function save_profiles(threshold)
            local sorted_times = {}
            for chunk_name, time_taken in pairs(profile_info) do
              sorted_times[#sorted_times + 1] = {chunk_name, time_taken}
            end
            table.sort(sorted_times, function(a, b) return a[2] > b[2] end)
            local results = {}
            for i, elem in ipairs(sorted_times) do
              if not threshold or threshold and elem[2] > threshold then
                results[i] = elem[1] .. ' took ' .. elem[2] .. 'ms'
              end
            end
            if threshold then
              table.insert(results, '(Only showing plugins that took longer than ' .. threshold .. ' ms ' .. 'to load)')
            end

            _G._packer.profile_output = results
          end

          time([[Luarocks path setup]], true)
          local package_path_str = "/home/t66/.cache/nvim/packer_hererocks/2.1.0-beta3/share/lua/5.1/?.lua;/home/t66/.cache/nvim/packer_hererocks/2.1.0-beta3/share/lua/5.1/?/init.lua;/home/t66/.cache/nvim/packer_hererocks/2.1.0-beta3/lib/luarocks/rocks-5.1/?.lua;/home/t66/.cache/nvim/packer_hererocks/2.1.0-beta3/lib/luarocks/rocks-5.1/?/init.lua"
          local install_cpath_pattern = "/home/t66/.cache/nvim/packer_hererocks/2.1.0-beta3/lib/lua/5.1/?.so"
          if not string.find(package.path, package_path_str, 1, true) then
            package.path = package.path .. ';' .. package_path_str
          end

          if not string.find(package.cpath, install_cpath_pattern, 1, true) then
            package.cpath = package.cpath .. ';' .. install_cpath_pattern
          end

          time([[Luarocks path setup]], false)
          time([[try_loadstring definition]], true)
          local function try_loadstring(s, component, name)
            local success, result = pcall(loadstring(s), name, _G.packer_plugins[name])
            if not success then
              vim.schedule(function()
                vim.api.nvim_notify('packer.nvim: Error running ' .. component .. ' for ' .. name .. ': ' .. result, vim.log.levels.ERROR, {})
              end)
            end
            return result
          end

          time([[try_loadstring definition]], false)
          time([[Defining packer_plugins]], true)
          _G.packer_plugins = {
            LuaSnip = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/LuaSnip",
              url = "https://github.com/L3MON4D3/LuaSnip"
            },
            ["cmp-nvim-lsp"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp",
              url = "https://github.com/hrsh7th/cmp-nvim-lsp"
            },
            ["lsp-zero.nvim"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/lsp-zero.nvim",
              url = "https://github.com/VonHeikemen/lsp-zero.nvim"
            },
            ["mason.nvim"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/mason.nvim",
              url = "https://github.com/williamboman/mason.nvim"
            },
            ["nvim-cmp"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/nvim-cmp",
              url = "https://github.com/hrsh7th/nvim-cmp"
            },
            ["nvim-lspconfig"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/nvim-lspconfig",
              url = "https://github.com/neovim/nvim-lspconfig"
            },
            ["nvim-tree.lua"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/nvim-tree.lua",
              url = "https://github.com/nvim-tree/nvim-tree.lua"
            },
            ["nvim-web-devicons"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/nvim-web-devicons",
              url = "https://github.com/nvim-tree/nvim-web-devicons"
            },
            ["packer.nvim"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/packer.nvim",
              url = "https://github.com/wbthomason/packer.nvim"
            },
            ["plenary.nvim"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/plenary.nvim",
              url = "https://github.com/nvim-lua/plenary.nvim"
            },
            ["telescope.nvim"] = {
              loaded = true,
              path = "/home/t66/.local/share/nvim/site/pack/packer/start/telescope.nvim",
              url = "https://github.com/nvim-telescope/telescope.nvim"
            }
          }

          time([[Defining packer_plugins]], false)

          _G._packer.inside_compile = false
          if _G._packer.needs_bufread == true then
            vim.cmd("doautocmd BufRead")
          end
          _G._packer.needs_bufread = false

          if should_profile then save_profiles() end

          end)

          if not no_errors then
            error_msg = error_msg:gsub('"', '\\"')
            vim.api.nvim_command('echohl ErrorMsg | echom "Error in packer_compiled: '..error_msg..'" | echom "Please check your config for correctness" | echohl None')
          end

    - name: Copy /home/t66/.config/qtile/config.py
      copy:
        dest: /home/t66/.config/qtile/config.py
        owner: t66
        mode: 33188
        content: |
          # Copyright (c) 2010 Aldo Cortesi
          # Copyright (c) 2010, 2014 dequis
          # Copyright (c) 2012 Randall Ma
          # Copyright (c) 2012-2014 Tycho Andersen
          # Copyright (c) 2012 Craig Barnes
          # Copyright (c) 2013 horsik
          # Copyright (c) 2013 Tao Sauvage
          #
          # Permission is hereby granted, free of charge, to any person obtaining a copy
          # of this software and associated documentation files (the "Software"), to deal
          # in the Software without restriction, including without limitation the rights
          # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
          # copies of the Software, and to permit persons to whom the Software is
          # furnished to do so, subject to the following conditions:
          #
          # The above copyright notice and this permission notice shall be included in
          # all copies or substantial portions of the Software.
          #
          # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
          # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
          # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
          # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
          # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
          # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
          # SOFTWARE.

          import os
          import subprocess
          from libqtile import bar, layout, widget, hook
          from libqtile.config import Click, Drag, Group, Key, Match, Screen
          from libqtile.lazy import lazy
          from libqtile.utils import guess_terminal
          from libqtile.bar import Bar
          from libqtile.widget import Spacer

          from Xlib import X, display
          from Xlib.ext import randr
          from pprint import pprint



          mod = "mod4"
          terminal = guess_terminal()

          # Setting background
          os.system("feh --bg-fill /home/t66/Pictures/wallpapers/stinger_mantis.jpg")

          keys = [
              # A list of available commands that can be bound to keys can be found
              # at https://docs.qtile.org/en/latest/manual/config/lazy.html
              # Switch between windows
              Key([mod], "h", lazy.layout.left(), desc="Move focus to left"),
              Key([mod], "l", lazy.layout.right(), desc="Move focus to right"),
              Key([mod], "j", lazy.layout.down(), desc="Move focus down"),
              Key([mod], "k", lazy.layout.up(), desc="Move focus up"),
              Key([mod], "space", lazy.layout.next(), desc="Move window focus to other window"),
              Key([mod], "period", lazy.layout.next_screen(), desc="Move focus to next monitor"),
              # Move windows between left/right columns or move up/down in current stack.
              # Moving out of range in Columns layout will create new column.
              Key(
                  [mod, "shift"], "h", lazy.layout.shuffle_left(), desc="Move window to the left"
              ),
              Key(
                  [mod, "shift"],
                  "l",
                  lazy.layout.shuffle_right(),
                  desc="Move window to the right",
              ),
              Key([mod, "shift"], "j", lazy.layout.shuffle_down(), desc="Move window down"),
              Key([mod, "shift"], "k", lazy.layout.shuffle_up(), desc="Move window up"),
              # Grow windows. If current window is on the edge of screen and direction
              # will be to screen edge - window would shrink.
              Key([mod, "control"], "h", lazy.layout.grow_left(), desc="Grow window to the left"),
              Key(
                  [mod, "control"], "l", lazy.layout.grow_right(), desc="Grow window to the right"
              ),
              Key([mod, "control"], "j", lazy.layout.grow_down(), desc="Grow window down"),
              Key([mod, "control"], "k", lazy.layout.grow_up(), desc="Grow window up"),
              Key([mod, "shift"], "j", lazy.layout.shuffle_down(), desc="move window down"),
              Key([mod, "shift"], "k", lazy.layout.shuffle_up(), desc="move window up"),
              Key([mod, "shift"], "h", lazy.layout.shuffle_left(), desc="move window left"),
              Key([mod, "shift"], "l", lazy.layout.shuffle_right(), desc="move window right"),
              Key([mod], "n", lazy.layout.normalize(), desc="Reset all window sizes"),
              # Toggle between split and unsplit sides of stack.
              # Split = all windows displayed
              # Unsplit = 1 window displayed, like Max layout, but still with
              # multiple stack panes
              Key([mod], "Return", lazy.spawn(terminal), desc="Launch terminal"),
              # Toggle between different layouts as defined below
              Key([mod], "Tab", lazy.next_layout(), desc="Toggle between layouts"),
              Key([mod], "w", lazy.window.kill(), desc="Kill focused window"),
              Key([mod, "control"], "r", lazy.reload_config(), desc="Reload the config"),
              Key([mod, "control"], "q", lazy.shutdown(), desc="Shutdown Qtile"),
              Key([mod], "r", lazy.spawn("dmenu_run"), desc="Run dmenu to launch apps"),
              Key([mod], "q", lazy.spawn("dm-kill"), desc="Run dmenu to kill processes"),
              # Changes focus to 2nd monitor
               ### Switch focus of monitors
              Key([mod], "period", lazy.next_screen(), desc='Move focus to next monitor'),

              # Run programs
              Key([mod, "shift"], "Return", lazy.spawn("firefox"), desc="Run web browser"),
              Key(
                  [mod, "control"],
                  "Return",
                  lazy.spawn("firefox -P 'Bug_Bounty_Hunter'"),
                  desc="Run web browser",
              ),
              Key(
                  [mod, "control"],
                  "p",
                  lazy.spawn("brightnessctl set +10%"),
                  desc="turn backlight up 10%",
              ),
              Key(
                  [mod, "control"],
                  "m",
                  lazy.spawn("brightnessctl set 10%-"),
                  desc="turn backlight down 10%",
              ),
              # Key([mod, "shift"], "up", lazy.spawn("pactl set-sink-volume @DEFAULT_SINK@ +5%"), desc="Raise volume 5%"),
              # Key([mod, "shift"], "down", lazy.spawn("pactl set-sink-volume @DEFAULT_SINK@ -5%"), desc="Lower volume 5%"),
          ]

          groups = [Group(i) for i in "123456789"]

          """
          colors = [["#282c34", "#282c34"],
                    ["#1c1f24", "#1c1f24"],
                    ["#dfdfdf", "#dfdfdf"],
                    ["#ff6c6b", "#ff6c6b"],
                    ["#98be65", "#98be65"],
                    ["#da8548", "#da8548"],
                    ["#51afef", "#51afef"],
                    ["#c678dd", "#c678dd"],
                    ["#46d9ff", "#46d9ff"],
                    ["#a9a1e1", "#a9a1e1"]
          ]
          # ogFedora colors colors1 = [
              ["#10100E", "#C6C6C4"],
              # red green
              ["#C40233", "#009F6B"],
              # yellow blue
              ["#FFD700", "#0087BD"],
              # magenta cyan
              ["#9A4EAE", "#20B2AA"],
          ]
          """
          colors1 = [
              #black white
              ["#1a1b26", "#a9b1d6"],
              # red green
              ["#f7768e", "#9ece6a"],
              # yellow blue
              ["#e0af68", "#7aa2f7"],
              # magenta cyan
              ["#7aa2f7", "#449dab"],
          ]

          d = display.Display()
          s = d.screen()
          r = s.root
          res = r.xrandr_get_screen_resources()._data


          # Dynamic multiscreen! (Thanks XRandr)
          num_screens = 0
          for output in res['outputs']:
              print("Output %d:" % (output))
              mon = d.xrandr_get_output_info(output, res['config_timestamp'])._data
              print("%s: %d" % (mon['name'], mon['num_preferred']))
              if mon['num_preferred']:
                  num_screens += 1


          for i in groups:
              keys.extend(
                  [
                      # mod1 + letter of group = switch to group
                      Key(
                          [mod],
                          i.name,
                          lazy.group[i.name].toscreen(),
                          desc="Switch to group {}".format(i.name),
                      ),
                      # mod1 + shift + letter of group = switch to & move focused window to group
                      Key(
                          [mod, "shift"],
                          i.name,
                          lazy.window.togroup(i.name, switch_group=False),
                          desc="Switch to & move focused window to group {}".format(i.name),
                      ),
                      # Or, use below if you prefer not to switch to that group.
                      # # mod1 + shift + letter of group = move focused window to group
                      # Key([mod, "shift"], i.name, lazy.window.togroup(i.name),
                      #     desc="move focused window to group {}".format(i.name)),
                  ]
              )

              layouts = [
                  layout.Max(),
                  layout.Columns(
                      border_focus_stack=[colors1[2][0], colors1[2][1]],
                      border_width=4,
                      border_focus=colors1[1][1],
                  ),
                  # Try more layouts by unleashing below layouts.
                  # layout.Stack(num_stacks=2),
                  # layout.Bsp(),
                  # layout.Matrix(),
                  # layout.MonadTall(),
                  layout.MonadWide(
                      border_focus_stack=[colors1[1][0], colors1[1][1]],
                      border_width=4,
                      border_focus=colors1[3][0],
                  ),
                  layout.Floating(border_focus="#d75f5f"),
                  # layout.RatioTile(),
                  # layout.Tile(),
                  # layout.TreeTab(),
                  # layout.VerticalTile(),
                  # layout.Zoomy(),
              ]

              widget_defaults = dict(
                  font="sans",
                  fontsize=12,
                  padding=3,
                  background=colors1[0][0],
                  foreground=colors1[0][1],
              )

              extension_defaults = widget_defaults.copy()



              try:
                  screens = []
                  for screen in range(0, num_screens):
                      screens.append(
          				Screen(
          					bottom=bar.Bar(
          						[
          							widget.GroupBox(
          								active=colors1[2][0],
          								inactive=colors1[3][0],
          								this_current_screen_border=colors1[1][0],
          								highlight_method="line",
          							),
          							widget.Prompt(),
          							widget.WindowName(),
          							widget.Chord(
          								chords_colors={
          									"launch": ("#ff0000", "#ffffff"),
          								},
          								name_transform=lambda name: name.upper(),
          							),
          							# widget.TextBox("bravo config", name="default"),
          							# widget.Spacer(length=5, background="#112616",),
          							widget.Spacer(
          								length=5,
          								background=colors1[0][0],
          							),
          							widget.TextBox(
          								text="",
          								background=colors1[0][0],
          								foreground=colors1[2][1],
          								fontsize=24,
          								font="meslolgs",
          								padding=0,
          							),
          							widget.CPU(background=colors1[2][1], foreground=colors1[0][0]),
          							widget.Spacer(
          								length=5,
          								background=colors1[2][1],
          							),
          							widget.TextBox(
          								text="",
          								background=colors1[2][1],
          								foreground=colors1[0][0],
          								fontsize=24,
          								font="meslolgs",
          								padding=0,
          							),
          							widget.CPUGraph(),
          							widget.ThermalZone(crit=90,),
          							widget.Battery(
          								background=colors1[0][0],
          								foreground=colors1[2][1],
          								notify_below=10,
          								update_interval=10,
          							),
          							# NB Systray is incompatible with Wayland, consider using StatusNotifier instead
          							# widget.StatusNotifier(),
          							widget.Spacer(
          								length=5,
          								background=colors1[0][0],
          							),
          							widget.TextBox(
          								text="",
          								background=colors1[0][0],
          								foreground=colors1[2][1],
          								fontsize=24,
          								font="meslolgs",
          								padding=0,
          							),
          							widget.Systray(background=colors1[2][1], foreground=colors1[0][0]),
          							# qtile_extras.widget.ALSAWidget(background=None, foreground="#112617"),
          							widget.Volume(
          								background=colors1[2][1], foreground=colors1[0][0], fmt="Vol {}"
          							),
          							widget.GenPollText(
          								background=colors1[2][1], foreground=colors1[0][0], name="JBL", update_interval=1, func=lambda: subprocess.run(["bluTh_Bttry"], stdout=subprocess.PIPE).stdout.decode("utf-8").strip(),
          							),
          							# widget.alsavolumecontrol(background=None),
          							widget.Spacer(
          								length=5,
          								background=colors1[2][1],
          							),
          							widget.TextBox(
          								text="",
          								background=colors1[2][1],
          								foreground=colors1[0][0],
          								fontsize=24,
          								font="meslolgs",
          								padding=0,
          							),
          							widget.Clock(
          								background=colors1[0][0],
          								foreground=colors1[2][1],
          								format="%d-%m-%Y %a %H:%M:%S %p",
          							),
          							# widget.QuickExit(),
          						],
          						30,
          						# border_width=[2, 0, 2, 0],  # Draw top and bottom borders
          						# border_color=["ff00ff", "000000", "ff00ff", "000000"]  # Borders are magenta
          					),
          				),
          	)


              except:
                  screens = [
                      Screen(
                          bottom=bar.Bar(
                              [
                                  widget.GroupBox(
                                      active=colors1[2][1],
                                      inactive=colors1[3][0],
                                      this_current_screen_border=colors1[1][0],
                                      highlight_method="line",
                                  ),
                                  widget.Prompt(),
                                  widget.WindowName(),
                                  widget.Chord(
                                      chords_colors={
                                          "launch": ("#ff0000", "#ffffff"),
                                      },
                                      name_transform=lambda name: name.upper(),
                                  ),
                                  # widget.TextBox("bravo config", name="default"),
                                  # widget.Spacer(length=5, background="#112616",),
                                  widget.Spacer(
                                      length=5,
                                      background=colors1[0][0],
                                  ),
                                  widget.TextBox(
                                      text="",
                                      background=colors1[0][0],
                                      foreground=colors1[2][1],
                                      fontsize=24,
                                      font="meslolgs",
                                      padding=0,
                                  ),
                                  widget.CPU(background=colors1[2][1], foreground=colors1[0][0]),
                                  widget.Spacer(
                                      length=5,
                                      background=colors1[2][1],
                                  ),
                                  widget.TextBox(
                                      text="",
                                      background=colors1[2][1],
                                      foreground=colors1[0][0],
                                      fontsize=24,
                                      font="meslolgs",
                                      padding=0,
                                  ),
                                  widget.Battery(
                                      background=colors1[0][0],
                                      foreground=colors1[2][1],
                                      notify_below=10,
                                      update_interval=10,
                                  ),
                                  # NB Systray is incompatible with Wayland, consider using StatusNotifier instead
                                  # widget.StatusNotifier(),
                                  widget.Spacer(
                                      length=5,
                                      background=colors1[0][0],
                                  ),
                                  widget.TextBox(
                                      text="",
                                      background=colors1[0][0],
                                      foreground=colors1[2][1],
                                      fontsize=24,
                                      font="meslolgs",
                                      padding=0,
                                  ),
                                  widget.Systray(background=colors1[2][1], foreground=colors1[0][0]),
                                  # qtile_extras.widget.ALSAWidget(background=None, foreground="#112617"),
                                  widget.Volume(
                                      background=colors1[2][1], foreground=colors1[0][0], fmt="Vol {}"
                                  ),
                                  # widget.alsavolumecontrol(background=None),
                                  widget.Spacer(
                                      length=5,
                                      background=colors1[2][1],
                                  ),
                                  widget.TextBox(
                                      text="",
                                      background=colors1[2][1],
                                      foreground=colors1[0][0],
                                      fontsize=24,
                                      font="meslolgs",
                                      padding=0,
                                  ),
                                  widget.Clock(
                                      background=colors1[0][0],
                                      foreground=colors1[2][1],
                                      format="%d-%m-%Y %a %H:%M:%S %p",
                                  ),
                                  # widget.QuickExit(),
                              ],
                              30,
                              # border_width=[2, 0, 2, 0],  # Draw top and bottom borders
                              # border_color=["ff00ff", "000000", "ff00ff", "000000"]  # Borders are magenta
                          ),
                      ),
                  ]


          # Drag floating layouts.
          mouse = [
              Drag(
                  [mod],
                  "Button1",
                  lazy.window.set_position_floating(),
                  start=lazy.window.get_position(),
              ),
              Drag(
                  [mod], "Button3", lazy.window.set_size_floating(), start=lazy.window.get_size()
              ),
              Click([mod], "Button2", lazy.window.bring_to_front()),
          ]

          dgroups_key_binder = None
          dgroups_app_rules = []  # type: list
          follow_mouse_focus = True
          bring_front_click = False
          cursor_warp = False
          floating_layout = layout.Floating(
              float_rules=[
                  # Run the utility of `xprop` to see the wm class and name of an X client.
                  *layout.Floating.default_float_rules,
                  Match(wm_class="confirmreset"),  # gitk
                  Match(wm_class="makebranch"),  # gitk
                  Match(wm_class="maketag"),  # gitk
                  Match(wm_class="ssh-askpass"),  # ssh-askpass
                  Match(title="branchdialog"),  # gitk
                  Match(title="pinentry"),  # GPG key password entry
              ]
          )
          auto_fullscreen = True
          focus_on_window_activation = "smart"
          reconfigure_screens = True

          # Auto start
          @hook.subscribe.startup_once
          def startup_once():
              home = os.path.expanduser("~/.config/qtile/auto_start.sh")
              subprocess.call([home])

          # make the function that listens for a change of number of screens and restarts qtile to update (e.g. super + ctrl + r)
          # add this function into config subscribe.screen_change(func) look into here https://docs.qtile.org/en/stable/manual/ref/hooks.html#ref-hooks
          # test with the notify-send command


          # If things like steam games want to auto-minimize themselves when losing
          # focus, should we respect this or not?
          auto_minimize = True

          # When using the Wayland backend, this can be used to configure input devices.
          wl_input_rules = None

          """
          colors:
          dark_black:#112616
          dark_red:#7f2b27
          dark_green:#2f7e25
          dark_yellow:#717f24
          dark_light_blue:#2f6a7f
          dark_blue:#47587f
          dark_gray:#327f77
          dark_white:#647d75
          black:#3c4812
          red:#e08009
          green:#18e000
          yellow:#bde000
          light_blue:#00aae0
          blue:#0058e0
          gray:#00e0c4
          white:#73fa91
          """

          # XXX: Gasp! We're lying here. In fact, nobody really uses or cares about this
          # string besides java UI toolkits; you can see several discussions on the
          # mailing lists, GitHub issues, and other WM documentation that suggest setting
          # this string if your java app doesn't work correctly. We may as well just lie
          # and say that we're a working one by default.
          #
          # We choose LG3D to maximize irony: it is a 3D non-reparenting WM written in
          # java that happens to be on java's whitelist.
          wmname = "LG3D"


    - name: Copy /home/t66/.config/qtile/auto_start.sh
      copy:
        dest: /home/t66/.config/qtile/auto_start.sh
        owner: t66
        mode: 33261
        content: |
          #!/usr/bin/bash

          #picom &
          #xrandr --output eDP-1 --right-of VGA-1 &
          # VGA DOCK thinkpad
          #xrandr --output eDP-1 --right-of DP-2-3
          #xrandr --output eDP-1 --right-of DP-2-2
          VID_OUTPUT=$(mon_check)
          if echo "$VID_OUTPUT" | grep -q "DP-2-2 was connected"; then
          	xrandr --output DP-2-2 --primary --left-of DP-2-3 --output eDP-1 --off
          fi
          #xrandr --output DP-2-2 --primary --left-of DP-2-3 --output eDP-1 --off;
          nm-applet &
          flameshot &
          dunst &
          batt_noti &
          xautolock -time 10 -locker slock &
          compton &

    - name: Copy /home/t66/.config/ranger/rc.conf
      copy:
        dest: /home/t66/.config/ranger/rc.conf
        owner: t66
        mode: 33188
        content: |
          # ===================================================================
          # This file contains the default startup commands for ranger.
          # To change them, it is recommended to create either /etc/ranger/rc.conf
          # (system-wide) or ~/.config/ranger/rc.conf (per user) and add your custom
          # commands there.
          #
          # If you copy this whole file there, you may want to set the environment
          # variable RANGER_LOAD_DEFAULT_RC to FALSE to avoid loading it twice.
          #
          # The purpose of this file is mainly to define keybindings and settings.
          # For running more complex python code, please create a plugin in "plugins/" or
          # a command in "commands.py".
          #
          # Each line is a command that will be run before the user interface
          # is initialized.  As a result, you can not use commands which rely
          # on the UI such as :delete or :mark.
          # ===================================================================

          # ===================================================================
          # == Options
          # ===================================================================

          # Which viewmode should be used?  Possible values are:
          #     miller: Use miller columns which show multiple levels of the hierarchy
          #     multipane: Midnight-commander like multipane view showing all tabs next
          #                to each other
          set viewmode miller
          #set viewmode multipane

          # How many columns are there, and what are their relative widths?
          set column_ratios 1,3,4

          # Which files should be hidden? (regular expression)
          set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

          # Show hidden files? You can toggle this by typing 'zh'
          set show_hidden false

          # Ask for a confirmation when running the "delete" command?
          # Valid values are "always", "never", "multiple" (default)
          # With "multiple", ranger will ask only if you delete multiple files at once.
          set confirm_on_delete multiple

          # Use non-default path for file preview script?
          # ranger ships with scope.sh, a script that calls external programs (see
          # README.md for dependencies) to preview images, archives, etc.
          #set preview_script ~/.config/ranger/scope.sh

          # Use the external preview script or display simple plain text or image previews?
          set use_preview_script true

          # Automatically count files in the directory, even before entering them?
          set automatically_count_files true

          # Open all images in this directory when running certain image viewers
          # like feh or sxiv?  You can still open selected files by marking them.
          set open_all_images true

          # Be aware of version control systems and display information.
          set vcs_aware false

          # State of the four backends git, hg, bzr, svn. The possible states are
          # disabled, local (only show local info), enabled (show local and remote
          # information).
          set vcs_backend_git enabled
          set vcs_backend_hg disabled
          set vcs_backend_bzr disabled
          set vcs_backend_svn disabled

          # Truncate the long commit messages to this length when shown in the statusbar.
          set vcs_msg_length 50

          # Use one of the supported image preview protocols
          set preview_images false

          # Set the preview image method. Supported methods:
          #
          # * w3m (default):
          #   Preview images in full color with the external command "w3mimgpreview"?
          #   This requires the console web browser "w3m" and a supported terminal.
          #   It has been successfully tested with "xterm" and "urxvt" without tmux.
          #
          # * iterm2:
          #   Preview images in full color using iTerm2 image previews
          #   (http://iterm2.com/images.html). This requires using iTerm2 compiled
          #   with image preview support.
          #
          #   This feature relies on the dimensions of the terminal's font.  By default, a
          #   width of 8 and height of 11 are used.  To use other values, set the options
          #   iterm2_font_width and iterm2_font_height to the desired values.
          #
          # * terminology:
          #   Previews images in full color in the terminology terminal emulator.
          #   Supports a wide variety of formats, even vector graphics like svg.
          #
          # * urxvt:
          #   Preview images in full color using urxvt image backgrounds. This
          #   requires using urxvt compiled with pixbuf support.
          #
          # * urxvt-full:
          #   The same as urxvt but utilizing not only the preview pane but the
          #   whole terminal window.
          #
          # * kitty:
          #   Preview images in full color using kitty image protocol.
          #   Requires python PIL or pillow library.
          #   If ranger does not share the local filesystem with kitty
          #   the transfer method is changed to encode the whole image;
          #   while slower, this allows remote previews,
          #   for example during an ssh session.
          #   Tmux is unsupported.
          #
          # * ueberzug:
          #   Preview images in full color with the external command "ueberzug".
          #   Images are shown by using a child window.
          #   Only for users who run X11 in GNU/Linux.
          set preview_images_method w3m

          # Delay in seconds before displaying an image with the w3m method.
          # Increase it in case of experiencing display corruption.
          set w3m_delay 0.02

          # Manually adjust the w3mimg offset when using a terminal which needs this
          set w3m_offset 0

          # Default iTerm2 font size (see: preview_images_method: iterm2)
          set iterm2_font_width 8
          set iterm2_font_height 11

          # Use a unicode "..." character to mark cut-off filenames?
          set unicode_ellipsis false

          # BIDI support - try to properly display file names in RTL languages (Hebrew, Arabic).
          # Requires the python-bidi pip package
          set bidi_support false

          # Show dotfiles in the bookmark preview box?
          set show_hidden_bookmarks true

          # Which colorscheme to use?  These colorschemes are available by default:
          # default, jungle, snow, solarized
          set colorscheme default

          # Preview files on the rightmost column?
          # And collapse (shrink) the last column if there is nothing to preview?
          set preview_files true
          set preview_directories true
          set collapse_preview true

          # Wrap long lines in plain text previews?
          set wrap_plaintext_previews false

          # Save the console history on exit?
          set save_console_history true

          # Draw the status bar on top of the browser window (default: bottom)
          set status_bar_on_top false

          # Draw a progress bar in the status bar which displays the average state of all
          # currently running tasks which support progress bars?
          set draw_progress_bar_in_status_bar true

          # Draw borders around columns? (separators, outline, both, or none)
          # Separators are vertical lines between columns.
          # Outline draws a box around all the columns.
          # Both combines the two.
          set draw_borders none

          # Display the directory name in tabs?
          set dirname_in_tabs false

          # Enable the mouse support?
          set mouse_enabled true

          # Display the file size in the main column or status bar?
          set display_size_in_main_column true
          set display_size_in_status_bar true

          # Display the free disk space in the status bar?
          set display_free_space_in_status_bar true

          # Display files tags in all columns or only in main column?
          set display_tags_in_all_columns true

          # Set a title for the window? Updates both `WM_NAME` and `WM_ICON_NAME`
          set update_title false

          # Set the tmux/screen window-name to "ranger"?
          set update_tmux_title true

          # Shorten the title if it gets long?  The number defines how many
          # directories are displayed at once, 0 turns off this feature.
          set shorten_title 3

          # Show hostname in titlebar?
          set hostname_in_titlebar true

          # Abbreviate $HOME with ~ in the titlebar (first line) of ranger?
          set tilde_in_titlebar false

          # How many directory-changes or console-commands should be kept in history?
          set max_history_size 20
          set max_console_history_size 50

          # Try to keep so much space between the top/bottom border when scrolling:
          set scroll_offset 8

          # Flush the input after each key hit?  (Noticeable when ranger lags)
          set flushinput true

          # Padding on the right when there's no preview?
          # This allows you to click into the space to run the file.
          set padding_right true

          # Save bookmarks (used with mX and `X) instantly?
          # This helps to synchronize bookmarks between multiple ranger
          # instances but leads to *slight* performance loss.
          # When false, bookmarks are saved when ranger is exited.
          set autosave_bookmarks true

          # Save the "`" bookmark to disk.  This can be used to switch to the last
          # directory by typing "``".
          set save_backtick_bookmark true

          # You can display the "real" cumulative size of directories by using the
          # command :get_cumulative_size or typing "dc".  The size is expensive to
          # calculate and will not be updated automatically.  You can choose
          # to update it automatically though by turning on this option:
          set autoupdate_cumulative_size false

          # Turning this on makes sense for screen readers:
          set show_cursor false

          # One of: size, natural, basename, atime, ctime, mtime, type, random
          set sort natural

          # Additional sorting options
          set sort_reverse false
          set sort_case_insensitive true
          set sort_directories_first true
          set sort_unicode false

          # Enable this if key combinations with the Alt Key don't work for you.
          # (Especially on xterm)
          set xterm_alt_key false

          # Whether to include bookmarks in cd command
          set cd_bookmarks true

          # Changes case sensitivity for the cd command tab completion
          set cd_tab_case sensitive

          # Use fuzzy tab completion with the "cd" command. For example,
          # ":cd /u/lo/b<tab>" expands to ":cd /usr/local/bin".
          set cd_tab_fuzzy false

          # Avoid previewing files larger than this size, in bytes.  Use a value of 0 to
          # disable this feature.
          set preview_max_size 0

          # The key hint lists up to this size have their sublists expanded.
          # Otherwise the submaps are replaced with "...".
          set hint_collapse_threshold 10

          # Add the highlighted file to the path in the titlebar
          set show_selection_in_titlebar true

          # The delay that ranger idly waits for user input, in milliseconds, with a
          # resolution of 100ms.  Lower delay reduces lag between directory updates but
          # increases CPU load.
          set idle_delay 2000

          # When the metadata manager module looks for metadata, should it only look for
          # a ".metadata.json" file in the current directory, or do a deep search and
          # check all directories above the current one as well?
          set metadata_deep_search false

          # Clear all existing filters when leaving a directory
          set clear_filters_on_dir_change false

          # Disable displaying line numbers in main column.
          # Possible values: false, absolute, relative.
          set line_numbers false

          # When line_numbers=relative show the absolute line number in the
          # current line.
          set relative_current_zero false

          # Start line numbers from 1 instead of 0
          set one_indexed false

          # Save tabs on exit
          set save_tabs_on_exit false

          # Enable scroll wrapping - moving down while on the last item will wrap around to
          # the top and vice versa.
          set wrap_scroll false

          # Set the global_inode_type_filter to nothing.  Possible options: d, f and l for
          # directories, files and symlinks respectively.
          set global_inode_type_filter

          # This setting allows to freeze the list of files to save I/O bandwidth.  It
          # should be 'false' during start-up, but you can toggle it by pressing F.
          set freeze_files false

          # Print file sizes in bytes instead of the default human-readable format.
          set size_in_bytes false

          # Warn at startup if RANGER_LEVEL env var is greater than 0, in other words
          # give a warning when you nest ranger in a subshell started by ranger.
          # Special value "error" makes the warning more visible.
          set nested_ranger_warning true

          # ===================================================================
          # == Local Options
          # ===================================================================
          # You can set local options that only affect a single directory.

          # Examples:
          # setlocal path=~/downloads sort mtime

          # ===================================================================
          # == Command Aliases in the Console
          # ===================================================================

          alias e     edit
          alias q     quit
          alias q!    quit!
          alias qa    quitall
          alias qa!   quitall!
          alias qall  quitall
          alias qall! quitall!
          alias setl  setlocal

          alias filter     scout -prts
          alias find       scout -aets
          alias mark       scout -mr
          alias unmark     scout -Mr
          alias search     scout -rs
          alias search_inc scout -rts
          alias travel     scout -aefklst

          # ===================================================================
          # == Define keys for the browser
          # ===================================================================

          # Basic
          map     Q quitall
          map     q quit
          copymap q ZZ ZQ

          map R     reload_cwd
          map F     set freeze_files!
          map <C-r> reset
          map <C-l> redraw_window
          map <C-c> abort
          map <esc> change_mode normal
          map ~ set viewmode!

          map i display_file
          map <A-j> scroll_preview 1
          map <A-k> scroll_preview -1
          map ? help
          map W display_log
          map w taskview_open
          map S shell $SHELL

          map :  console
          map ;  console
          map !  console shell%space
          map @  console -p6 shell  %%s
          map #  console shell -p%space
          map s  console shell%space
          map r  chain draw_possible_programs; console open_with%space
          map f  console find%space
          map cd console cd%space

          map <C-p> chain console; eval fm.ui.console.history_move(-1)

          # Change the line mode
          map Mf linemode filename
          map Mi linemode fileinfo
          map Mm linemode mtime
          map Mh linemode humanreadablemtime
          map Mp linemode permissions
          map Ms linemode sizemtime
          map MH linemode sizehumanreadablemtime
          map Mt linemode metatitle

          # Tagging / Marking
          map t       tag_toggle
          map ut      tag_remove
          map "<any>  tag_toggle tag=%any
          map <Space> mark_files toggle=True
          map v       mark_files all=True toggle=True
          map uv      mark_files all=True val=False
          map V       toggle_visual_mode
          map uV      toggle_visual_mode reverse=True

          # For the nostalgics: Midnight Commander bindings
          map <F1> help
          map <F2> rename_append
          map <F3> display_file
          map <F4> edit
          map <F5> copy
          map <F6> cut
          map <F7> console mkdir%space
          map <F8> console delete
          #map <F8> console trash
          map <F10> exit

          # In case you work on a keyboard with dvorak layout
          map <UP>       move up=1
          map <DOWN>     move down=1
          map <LEFT>     move left=1
          map <RIGHT>    move right=1
          map <HOME>     move to=0
          map <END>      move to=-1
          map <PAGEDOWN> move down=1   pages=True
          map <PAGEUP>   move up=1     pages=True
          map <CR>       move right=1
          #map <DELETE>   console delete
          map <INSERT>   console touch%space

          # VIM-like
          copymap <UP>       k
          copymap <DOWN>     j
          copymap <LEFT>     h
          copymap <RIGHT>    l
          copymap <HOME>     gg
          copymap <END>      G
          copymap <PAGEDOWN> <C-F>
          copymap <PAGEUP>   <C-B>

          map J  move down=0.5  pages=True
          map K  move up=0.5    pages=True
          copymap J <C-D>
          copymap K <C-U>

          # Jumping around
          map H     history_go -1
          map L     history_go 1
          map ]     move_parent 1
          map [     move_parent -1
          map }     traverse
          map {     traverse_backwards
          map )     jump_non

          map gh cd ~
          map ge cd /etc
          map gu cd /usr
          map gd cd /dev
          map gl cd -r .
          map gL cd -r %f
          map go cd /opt
          map gv cd /var
          map gm cd /media
          map gi eval fm.cd('/run/media/' + os.getenv('USER'))
          map gM cd /mnt
          map gs cd /srv
          map gp cd /tmp
          map gr cd /
          map gR eval fm.cd(ranger.RANGERDIR)
          map g/ cd /
          map g? cd /usr/share/doc/ranger

          # External Programs
          map E  edit
          map du shell -p du --max-depth=1 -h --apparent-size
          map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
          map yp yank path
          map yd yank dir
          map yn yank name
          map y. yank name_without_extension

          # Filesystem Operations
          map =  chmod

          map cw console rename%space
          map a  rename_append
          map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
          map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

          map pp paste
          map po paste overwrite=True
          map pP paste append=True
          map pO paste overwrite=True append=True
          map pl paste_symlink relative=False
          map pL paste_symlink relative=True
          map phl paste_hardlink
          map pht paste_hardlinked_subtree
          map pd console paste dest=
          map p`<any> paste dest=%any_path
          map p'<any> paste dest=%any_path

          map dD console delete
          map dT console trash

          map dd cut
          map ud uncut
          map da cut mode=add
          map dr cut mode=remove
          map dt cut mode=toggle

          map yy copy
          map uy uncut
          map ya copy mode=add
          map yr copy mode=remove
          map yt copy mode=toggle

          # Temporary workarounds
          map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
          map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
          map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
          map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
          map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
          map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
          map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
          map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

          # Searching
          map /  console search%space
          map n  search_next
          map N  search_next forward=False
          map ct search_next order=tag
          map cs search_next order=size
          map ci search_next order=mimetype
          map cc search_next order=ctime
          map cm search_next order=mtime
          map ca search_next order=atime

          # Tabs
          map <C-n>     tab_new
          map <C-w>     tab_close
          map <TAB>     tab_move 1
          map <S-TAB>   tab_move -1
          map <A-Right> tab_move 1
          map <A-Left>  tab_move -1
          map gt        tab_move 1
          map gT        tab_move -1
          map gn        tab_new
          map gc        tab_close
          map uq        tab_restore
          map <a-1>     tab_open 1
          map <a-2>     tab_open 2
          map <a-3>     tab_open 3
          map <a-4>     tab_open 4
          map <a-5>     tab_open 5
          map <a-6>     tab_open 6
          map <a-7>     tab_open 7
          map <a-8>     tab_open 8
          map <a-9>     tab_open 9
          map <a-r>     tab_shift 1
          map <a-l>     tab_shift -1

          # Sorting
          map or set sort_reverse!
          map oz set sort=random
          map os chain set sort=size;      set sort_reverse=False
          map ob chain set sort=basename;  set sort_reverse=False
          map on chain set sort=natural;   set sort_reverse=False
          map om chain set sort=mtime;     set sort_reverse=False
          map oc chain set sort=ctime;     set sort_reverse=False
          map oa chain set sort=atime;     set sort_reverse=False
          map ot chain set sort=type;      set sort_reverse=False
          map oe chain set sort=extension; set sort_reverse=False

          map oS chain set sort=size;      set sort_reverse=True
          map oB chain set sort=basename;  set sort_reverse=True
          map oN chain set sort=natural;   set sort_reverse=True
          map oM chain set sort=mtime;     set sort_reverse=True
          map oC chain set sort=ctime;     set sort_reverse=True
          map oA chain set sort=atime;     set sort_reverse=True
          map oT chain set sort=type;      set sort_reverse=True
          map oE chain set sort=extension; set sort_reverse=True

          map dc get_cumulative_size

          # Settings
          map zc    set collapse_preview!
          map zd    set sort_directories_first!
          map zh    set show_hidden!
          map <C-h> set show_hidden!
          copymap <C-h> <backspace>
          copymap <backspace> <backspace2>
          map zI    set flushinput!
          map zi    set preview_images!
          map zm    set mouse_enabled!
          map zp    set preview_files!
          map zP    set preview_directories!
          map zs    set sort_case_insensitive!
          map zu    set autoupdate_cumulative_size!
          map zv    set use_preview_script!
          map zf    console filter%space
          copymap zf zz

          # Filter stack
          map .d filter_stack add type d
          map .f filter_stack add type f
          map .l filter_stack add type l
          map .m console filter_stack add mime%space
          map .n console filter_stack add name%space
          map .# console filter_stack add hash%space
          map ." filter_stack add duplicate
          map .' filter_stack add unique
          map .| filter_stack add or
          map .& filter_stack add and
          map .! filter_stack add not
          map .r filter_stack rotate
          map .c filter_stack clear
          map .* filter_stack decompose
          map .p filter_stack pop
          map .. filter_stack show

          # Bookmarks
          map `<any>  enter_bookmark %any
          map '<any>  enter_bookmark %any
          map m<any>  set_bookmark %any
          map um<any> unset_bookmark %any

          map m<bg>   draw_bookmarks
          copymap m<bg>  um<bg> `<bg> '<bg>

          # Generate all the chmod bindings with some python help:
          eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

          eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
          eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

          # ===================================================================
          # == Define keys for the console
          # ===================================================================
          # Note: Unmapped keys are passed directly to the console.

          # Basic
          cmap <tab>   eval fm.ui.console.tab()
          cmap <s-tab> eval fm.ui.console.tab(-1)
          cmap <ESC>   eval fm.ui.console.close()
          cmap <CR>    eval fm.ui.console.execute()
          cmap <C-l>   redraw_window

          copycmap <ESC> <C-c>
          copycmap <CR>  <C-j>

          # Move around
          cmap <up>    eval fm.ui.console.history_move(-1)
          cmap <down>  eval fm.ui.console.history_move(1)
          cmap <left>  eval fm.ui.console.move(left=1)
          cmap <right> eval fm.ui.console.move(right=1)
          cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
          cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
          cmap <a-b> eval fm.ui.console.move_word(left=1)
          cmap <a-f> eval fm.ui.console.move_word(right=1)

          copycmap <a-b> <a-left>
          copycmap <a-f> <a-right>

          # Line Editing
          cmap <backspace>  eval fm.ui.console.delete(-1)
          cmap <delete>     eval fm.ui.console.delete(0)
          cmap <C-w>        eval fm.ui.console.delete_word()
          cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
          cmap <C-k>        eval fm.ui.console.delete_rest(1)
          cmap <C-u>        eval fm.ui.console.delete_rest(-1)
          cmap <C-y>        eval fm.ui.console.paste()

          # And of course the emacs way
          copycmap <ESC>       <C-g>
          copycmap <up>        <C-p>
          copycmap <down>      <C-n>
          copycmap <left>      <C-b>
          copycmap <right>     <C-f>
          copycmap <home>      <C-a>
          copycmap <end>       <C-e>
          copycmap <delete>    <C-d>
          copycmap <backspace> <C-h>

          # Note: There are multiple ways to express backspaces.  <backspace> (code 263)
          # and <backspace2> (code 127).  To be sure, use both.
          copycmap <backspace> <backspace2>

          # This special expression allows typing in numerals:
          cmap <allow_quantifiers> false

          # ===================================================================
          # == Pager Keybindings
          # ===================================================================

          # Movement
          pmap  <down>      pager_move  down=1
          pmap  <up>        pager_move  up=1
          pmap  <left>      pager_move  left=4
          pmap  <right>     pager_move  right=4
          pmap  <home>      pager_move  to=0
          pmap  <end>       pager_move  to=-1
          pmap  <pagedown>  pager_move  down=1.0  pages=True
          pmap  <pageup>    pager_move  up=1.0    pages=True
          pmap  <C-d>       pager_move  down=0.5  pages=True
          pmap  <C-u>       pager_move  up=0.5    pages=True

          copypmap <UP>       k  <C-p>
          copypmap <DOWN>     j  <C-n> <CR>
          copypmap <LEFT>     h
          copypmap <RIGHT>    l
          copypmap <HOME>     g
          copypmap <END>      G
          copypmap <C-d>      d
          copypmap <C-u>      u
          copypmap <PAGEDOWN> n  f  <C-F>  <Space>
          copypmap <PAGEUP>   p  b  <C-B>

          # Basic
          pmap     <C-l> redraw_window
          pmap     <ESC> pager_close
          copypmap <ESC> q Q i <F3>
          pmap E      edit_file

          # ===================================================================
          # == Taskview Keybindings
          # ===================================================================

          # Movement
          tmap <up>        taskview_move up=1
          tmap <down>      taskview_move down=1
          tmap <home>      taskview_move to=0
          tmap <end>       taskview_move to=-1
          tmap <pagedown>  taskview_move down=1.0  pages=True
          tmap <pageup>    taskview_move up=1.0    pages=True
          tmap <C-d>       taskview_move down=0.5  pages=True
          tmap <C-u>       taskview_move up=0.5    pages=True

          copytmap <UP>       k  <C-p>
          copytmap <DOWN>     j  <C-n> <CR>
          copytmap <HOME>     g
          copytmap <END>      G
          copytmap <C-u>      u
          copytmap <PAGEDOWN> n  f  <C-F>  <Space>
          copytmap <PAGEUP>   p  b  <C-B>

          # Changing priority and deleting tasks
          tmap J          eval -q fm.ui.taskview.task_move(-1)
          tmap K          eval -q fm.ui.taskview.task_move(0)
          tmap dd         eval -q fm.ui.taskview.task_remove()
          tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
          tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
          tmap <delete>   eval -q fm.ui.taskview.task_remove()

          # Basic
          tmap <C-l> redraw_window
          tmap <ESC> taskview_close
          copytmap <ESC> q Q w <C-c>

    - name: Copy /home/t66/.config/ranger/rifle.conf
      copy:
        dest: /home/t66/.config/ranger/rifle.conf
        owner: t66
        mode: 33188
        content: |
          # vim: ft=cfg
          #
          # This is the configuration file of "rifle", ranger's file executor/opener.
          # Each line consists of conditions and a command.  For each line the conditions
          # are checked and if they are met, the respective command is run.
          #
          # Syntax:
          #   <condition1> , <condition2> , ... = command
          #
          # The command can contain these environment variables:
          #   $1-$9 | The n-th selected file
          #   $@    | All selected files
          #
          # If you use the special command "ask", rifle will ask you what program to run.
          #
          # Prefixing a condition with "!" will negate its result.
          # These conditions are currently supported:
          #   match <regexp> | The regexp matches $1
          #   ext <regexp>   | The regexp matches the extension of $1
          #   mime <regexp>  | The regexp matches the mime type of $1
          #   name <regexp>  | The regexp matches the basename of $1
          #   path <regexp>  | The regexp matches the absolute path of $1
          #   has <program>  | The program is installed (i.e. located in $PATH)
          #   env <variable> | The environment variable "variable" is non-empty
          #   file           | $1 is a file
          #   directory      | $1 is a directory
          #   number <n>     | change the number of this command to n
          #   terminal       | stdin, stderr and stdout are connected to a terminal
          #   X              | A graphical environment is available (darwin, Xorg, or Wayland)
          #
          # There are also pseudo-conditions which have a "side effect":
          #   flag <flags>  | Change how the program is run. See below.
          #   label <label> | Assign a label or name to the command so it can
          #                 | be started with :open_with <label> in ranger
          #                 | or `rifle -p <label>` in the standalone executable.
          #   else          | Always true.
          #
          # Flags are single characters which slightly transform the command:
          #   f | Fork the program, make it run in the background.
          #     |   New command = setsid $command >& /dev/null &
          #   r | Execute the command with root permissions
          #     |   New command = sudo $command
          #   t | Run the program in a new terminal.  If $TERMCMD is not defined,
          #     | rifle will attempt to extract it from $TERM.
          #     |   New command = $TERMCMD -e $command
          # Note: The "New command" serves only as an illustration, the exact
          # implementation may differ.
          # Note: When using rifle in ranger, there is an additional flag "c" for
          # only running the current file even if you have marked multiple files.

          #-------------------------------------------
          # Websites
          #-------------------------------------------
          # Rarely installed browsers get higher priority; It is assumed that if you
          # install a rare browser, you probably use it.  Firefox/konqueror/w3m on the
          # other hand are often only installed as fallback browsers.
          ext x?html?, has surf,             X, flag f = surf -- file://"$1"
          ext x?html?, has vimprobable,      X, flag f = vimprobable -- "$@"
          ext x?html?, has vimprobable2,     X, flag f = vimprobable2 -- "$@"
          ext x?html?, has qutebrowser,      X, flag f = qutebrowser -- "$@"
          ext x?html?, has dwb,              X, flag f = dwb -- "$@"
          ext x?html?, has jumanji,          X, flag f = jumanji -- "$@"
          ext x?html?, has luakit,           X, flag f = luakit -- "$@"
          ext x?html?, has uzbl,             X, flag f = uzbl -- "$@"
          ext x?html?, has uzbl-tabbed,      X, flag f = uzbl-tabbed -- "$@"
          ext x?html?, has uzbl-browser,     X, flag f = uzbl-browser -- "$@"
          ext x?html?, has uzbl-core,        X, flag f = uzbl-core -- "$@"
          ext x?html?, has midori,           X, flag f = midori -- "$@"
          ext x?html?, has opera,            X, flag f = opera -- "$@"
          ext x?html?, has firefox,          X, flag f = firefox -- "$@"
          ext x?html?, has seamonkey,        X, flag f = seamonkey -- "$@"
          ext x?html?, has iceweasel,        X, flag f = iceweasel -- "$@"
          ext x?html?, has chromium-browser, X, flag f = chromium-browser -- "$@"
          ext x?html?, has chromium,         X, flag f = chromium -- "$@"
          ext x?html?, has google-chrome,    X, flag f = google-chrome -- "$@"
          ext x?html?, has epiphany,         X, flag f = epiphany -- "$@"
          ext x?html?, has konqueror,        X, flag f = konqueror -- "$@"
          ext x?html?, has elinks,            terminal = elinks "$@"
          ext x?html?, has links2,            terminal = links2 "$@"
          ext x?html?, has links,             terminal = links "$@"
          ext x?html?, has lynx,              terminal = lynx -- "$@"
          ext x?html?, has w3m,               terminal = w3m "$@"

          #-------------------------------------------
          # Misc
          #-------------------------------------------
          # Define the "editor" for text files as first action
          mime ^text,  label editor = ${VISUAL:-$EDITOR} -- "$@"
          mime ^text,  label pager  = "$PAGER" -- "$@"
          !mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} -- "$@"
          !mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" -- "$@"

          ext 1                         = man "$1"
          ext s[wmf]c, has zsnes, X     = zsnes "$1"
          ext s[wmf]c, has snes9x-gtk,X = snes9x-gtk "$1"
          ext nes, has fceux, X         = fceux "$1"
          ext exe                       = wine "$1"
          name ^[mM]akefile$            = make

          #--------------------------------------------
          # Scripts
          #-------------------------------------------
          ext py  = python -- "$1"
          ext pl  = perl -- "$1"
          ext rb  = ruby -- "$1"
          ext js  = node -- "$1"
          ext sh  = sh -- "$1"
          ext php = php -- "$1"

          #--------------------------------------------
          # Audio without X
          #-------------------------------------------
          mime ^audio|ogg$, terminal, has mpv      = mpv -- "$@"
          mime ^audio|ogg$, terminal, has mplayer2 = mplayer2 -- "$@"
          mime ^audio|ogg$, terminal, has mplayer  = mplayer -- "$@"
          ext midi?,        terminal, has wildmidi = wildmidi -- "$@"

          #--------------------------------------------
          # Video/Audio with a GUI
          #-------------------------------------------
          mime ^video|audio, has gmplayer, X, flag f = gmplayer -- "$@"
          mime ^video|audio, has smplayer, X, flag f = smplayer "$@"
          mime ^video,       has mpv,      X, flag f = mpv -- "$@"
          mime ^video,       has mpv,      X, flag f = mpv --fs -- "$@"
          mime ^video,       has mplayer2, X, flag f = mplayer2 -- "$@"
          mime ^video,       has mplayer2, X, flag f = mplayer2 -fs -- "$@"
          mime ^video,       has mplayer,  X, flag f = mplayer -- "$@"
          mime ^video,       has mplayer,  X, flag f = mplayer -fs -- "$@"
          mime ^video|audio, has vlc,      X, flag f = vlc -- "$@"
          mime ^video|audio, has totem,    X, flag f = totem -- "$@"
          mime ^video|audio, has totem,    X, flag f = totem --fullscreen -- "$@"

          #--------------------------------------------
          # Video without X
          #-------------------------------------------
          mime ^video, terminal, !X, has mpv       = mpv -- "$@"
          mime ^video, terminal, !X, has mplayer2  = mplayer2 -- "$@"
          mime ^video, terminal, !X, has mplayer   = mplayer -- "$@"

          #-------------------------------------------
          # Documents
          #-------------------------------------------
          ext pdf, has llpp,     X, flag f = llpp "$@"
          #ext pdf, has zathura,  X, flag f = zathura -- "$@"
          ext pdf, has mupdf,    X, flag f = mupdf "$@"
          ext pdf, has mupdf-x11,X, flag f = mupdf-x11 "$@"
          ext pdf, has apvlv,    X, flag f = apvlv -- "$@"
          ext pdf, has xpdf,     X, flag f = xpdf -- "$@"
          ext pdf, has evince,   X, flag f = evince -- "$@"
          ext pdf, has atril,    X, flag f = atril -- "$@"
          ext pdf, has okular,   X, flag f = okular -- "$@"
          ext pdf, has epdfview, X, flag f = epdfview -- "$@"
          ext pdf, has qpdfview, X, flag f = qpdfview "$@"
          ext pdf, has open,     X, flag f = open "$@"

          ext docx?, has catdoc,       terminal = catdoc -- "$@" | "$PAGER"

          ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has gnumeric,    X, flag f = gnumeric -- "$@"
          ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has kspread,     X, flag f = kspread -- "$@"
          ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoffice "$@"
          ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has soffice,     X, flag f = soffice "$@"
          ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has ooffice,     X, flag f = ooffice "$@"

          ext djvu, has zathura,X, flag f = zathura -- "$@"
          ext djvu, has evince, X, flag f = evince -- "$@"
          ext djvu, has atril,  X, flag f = atril -- "$@"
          ext djvu, has djview, X, flag f = djview -- "$@"

          ext epub, has ebook-viewer, X, flag f = ebook-viewer -- "$@"
          ext epub, has zathura,      X, flag f = zathura -- "$@"
          ext epub, has mupdf,        X, flag f = mupdf -- "$@"
          ext mobi, has ebook-viewer, X, flag f = ebook-viewer -- "$@"

          ext cbr,  has zathura,      X, flag f = zathura -- "$@"
          ext cbz,  has zathura,      X, flag f = zathura -- "$@"

          #-------------------------------------------
          # Images
          #-------------------------------------------
          mime ^image/svg, has inkscape, X, flag f = inkscape -- "$@"
          mime ^image/svg, has display,  X, flag f = display -- "$@"

          mime ^image, has imv,       X, flag f = imv -- "$@"
          mime ^image, has pqiv,      X, flag f = pqiv -- "$@"
          mime ^image, has sxiv,      X, flag f = sxiv -- "$@"
          mime ^image, has feh,       X, flag f = feh -- "$@"
          mime ^image, has mirage,    X, flag f = mirage -- "$@"
          mime ^image, has ristretto, X, flag f = ristretto "$@"
          mime ^image, has eog,       X, flag f = eog -- "$@"
          mime ^image, has eom,       X, flag f = eom -- "$@"
          mime ^image, has nomacs,    X, flag f = nomacs -- "$@"
          mime ^image, has geeqie,    X, flag f = geeqie -- "$@"
          mime ^image, has gpicview,  X, flag f = gpicview -- "$@"
          mime ^image, has gwenview,  X, flag f = gwenview -- "$@"
          mime ^image, has gimp,      X, flag f = gimp -- "$@"
          ext xcf,                    X, flag f = gimp -- "$@"

          #-------------------------------------------
          # Archives
          #-------------------------------------------

          # avoid password prompt by providing empty password
          ext 7z, has 7z = 7z -p l "$@" | "$PAGER"
          # This requires atool
          ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     has atool = atool --list --each -- "$@" | "$PAGER"
          ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | "$PAGER"
          ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --extract --each -- "$@"
          ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"

          # Listing and extracting archives without atool:
          ext tar|gz|bz2|xz, has tar = tar vvtf "$1" | "$PAGER"
          ext tar|gz|bz2|xz, has tar = for file in "$@"; do tar vvxf "$file"; done
          ext bz2, has bzip2 = for file in "$@"; do bzip2 -dk "$file"; done
          ext zip, has unzip = unzip -l "$1" | less
          ext zip, has unzip = for file in "$@"; do unzip -d "${file%.*}" "$file"; done
          ext ace, has unace = unace l "$1" | less
          ext ace, has unace = for file in "$@"; do unace e "$file"; done
          ext rar, has unrar = unrar l "$1" | less
          ext rar, has unrar = for file in "$@"; do unrar x "$file"; done

          #-------------------------------------------
          # Fonts
          #-------------------------------------------
          mime ^font, has fontforge, X, flag f = fontforge "$@"

          #-------------------------------------------
          # Flag t fallback terminals
          #-------------------------------------------
          # Rarely installed terminal emulators get higher priority; It is assumed that
          # if you install a rare terminal emulator, you probably use it.
          # gnome-terminal/konsole/xterm on the other hand are often installed as part of
          # a desktop environment or as fallback terminal emulators.
          mime ^ranger/x-terminal-emulator, has terminology = terminology -e "$@"
          mime ^ranger/x-terminal-emulator, has kitty = kitty -- "$@"
          mime ^ranger/x-terminal-emulator, has alacritty = alacritty -e "$@"
          mime ^ranger/x-terminal-emulator, has sakura = sakura -e "$@"
          mime ^ranger/x-terminal-emulator, has lilyterm = lilyterm -e "$@"
          #mime ^ranger/x-terminal-emulator, has cool-retro-term = cool-retro-term -e "$@"
          mime ^ranger/x-terminal-emulator, has termite = termite -x '"$@"'
          #mime ^ranger/x-terminal-emulator, has yakuake = yakuake -e "$@"
          mime ^ranger/x-terminal-emulator, has guake = guake -ne "$@"
          mime ^ranger/x-terminal-emulator, has tilda = tilda -c "$@"
          mime ^ranger/x-terminal-emulator, has st = st -e "$@"
          mime ^ranger/x-terminal-emulator, has terminator = terminator -x "$@"
          mime ^ranger/x-terminal-emulator, has urxvt = urxvt -e "$@"
          mime ^ranger/x-terminal-emulator, has pantheon-terminal = pantheon-terminal -e "$@"
          mime ^ranger/x-terminal-emulator, has lxterminal = lxterminal -e "$@"
          mime ^ranger/x-terminal-emulator, has mate-terminal = mate-terminal -x "$@"
          mime ^ranger/x-terminal-emulator, has xfce4-terminal = xfce4-terminal -x "$@"
          mime ^ranger/x-terminal-emulator, has konsole = konsole -e "$@"
          mime ^ranger/x-terminal-emulator, has gnome-terminal = gnome-terminal -- "$@"
          mime ^ranger/x-terminal-emulator, has xterm = xterm -e "$@"

          #-------------------------------------------
          # Misc
          #-------------------------------------------
          label wallpaper, number 11, mime ^image, has feh, X = feh --bg-scale "$1"
          label wallpaper, number 12, mime ^image, has feh, X = feh --bg-tile "$1"
          label wallpaper, number 13, mime ^image, has feh, X = feh --bg-center "$1"
          label wallpaper, number 14, mime ^image, has feh, X = feh --bg-fill "$1"

          #-------------------------------------------
          # Generic file openers
          #-------------------------------------------
          label open, has xdg-open = xdg-open -- "$@"
          label open, has open     = open -- "$@"

          # Define the editor for non-text files + pager as last action
                        !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = ask
          label editor, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = ${VISUAL:-$EDITOR} -- "$@"
          label pager,  !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = "$PAGER" -- "$@"


          ######################################################################
          # The actions below are left so low down in this file on purpose, so #
          # they are never triggered accidentally.                             #
          ######################################################################

          # Execute a file as program/script.
          mime application/x-executable = "$1"

          # Move the file to trash using trash-cli.
          label trash, has trash-put = trash-put -- "$@"
          label trash = mkdir -p -- ${XDG_DATA_DIR:-$HOME/.ranger}/ranger-trash; mv -- "$@" ${XDG_DATA_DIR:-$HOME/.ranger}/ranger-trash


    - name: Enable abrt-journal-core.service service
      service:
        name: abrt-journal-core.service
        enabled: yes
    - name: Enable abrt-oops.service service
      service:
        name: abrt-oops.service
        enabled: yes
    - name: Enable abrt-vmcore.service service
      service:
        name: abrt-vmcore.service
        enabled: yes
    - name: Enable abrt-xorg.service service
      service:
        name: abrt-xorg.service
        enabled: yes
    - name: Enable abrtd.service service
      service:
        name: abrtd.service
        enabled: yes
    - name: Enable accounts-daemon.service service
      service:
        name: accounts-daemon.service
        enabled: yes
    - name: Enable akmods.service service
      service:
        name: akmods.service
        enabled: yes
    - name: Enable auditd.service service
      service:
        name: auditd.service
        enabled: yes
    - name: Enable avahi-daemon.service service
      service:
        name: avahi-daemon.service
        enabled: yes
    - name: Enable bluetooth.service service
      service:
        name: bluetooth.service
        enabled: yes
    - name: Enable chronyd.service service
      service:
        name: chronyd.service
        enabled: yes
    - name: Enable crond.service service
      service:
        name: crond.service
        enabled: yes
    - name: Enable dbus-broker.service service
      service:
        name: dbus-broker.service
        enabled: yes
    - name: Enable firewalld.service service
      service:
        name: firewalld.service
        enabled: yes
    - name: Enable flatpak-add-fedora-repos.service service
      service:
        name: flatpak-add-fedora-repos.service
        enabled: yes
    - name: Enable gdm.service service
      service:
        name: gdm.service
        enabled: yes
    - name: Enable getty@.service service
      service:
        name: getty@.service
        enabled: yes
    - name: Enable import-state.service service
      service:
        name: import-state.service
        enabled: yes
    - name: Enable iscsi-onboot.service service
      service:
        name: iscsi-onboot.service
        enabled: yes
    - name: Enable iscsi-starter.service service
      service:
        name: iscsi-starter.service
        enabled: yes
    - name: Enable libvirtd.service service
      service:
        name: libvirtd.service
        enabled: yes
    - name: Enable livesys-late.service service
      service:
        name: livesys-late.service
        enabled: yes
    - name: Enable livesys.service service
      service:
        name: livesys.service
        enabled: yes
    - name: Enable low-memory-monitor.service service
      service:
        name: low-memory-monitor.service
        enabled: yes
    - name: Enable lvm2-monitor.service service
      service:
        name: lvm2-monitor.service
        enabled: yes
    - name: Enable mcelog.service service
      service:
        name: mcelog.service
        enabled: yes
    - name: Enable mdmonitor.service service
      service:
        name: mdmonitor.service
        enabled: yes
    - name: Enable ModemManager.service service
      service:
        name: ModemManager.service
        enabled: yes
    - name: Enable NetworkManager-dispatcher.service service
      service:
        name: NetworkManager-dispatcher.service
        enabled: yes
    - name: Enable NetworkManager-wait-online.service service
      service:
        name: NetworkManager-wait-online.service
        enabled: yes
    - name: Enable NetworkManager.service service
      service:
        name: NetworkManager.service
        enabled: yes
    - name: Enable ostree-remount.service service
      service:
        name: ostree-remount.service
        enabled: yes
    - name: Enable power-profiles-daemon.service service
      service:
        name: power-profiles-daemon.service
        enabled: yes
    - name: Enable qemu-guest-agent.service service
      service:
        name: qemu-guest-agent.service
        enabled: yes
    - name: Enable rtkit-daemon.service service
      service:
        name: rtkit-daemon.service
        enabled: yes
    - name: Enable selinux-autorelabel-mark.service service
      service:
        name: selinux-autorelabel-mark.service
        enabled: yes
    - name: Enable sssd.service service
      service:
        name: sssd.service
        enabled: yes
    - name: Enable switcheroo-control.service service
      service:
        name: switcheroo-control.service
        enabled: yes
    - name: Enable systemd-network-generator.service service
      service:
        name: systemd-network-generator.service
        enabled: yes
    - name: Enable systemd-oomd.service service
      service:
        name: systemd-oomd.service
        enabled: yes
    - name: Enable systemd-resolved.service service
      service:
        name: systemd-resolved.service
        enabled: yes
    - name: Enable thermald.service service
      service:
        name: thermald.service
        enabled: yes
    - name: Enable udisks2.service service
      service:
        name: udisks2.service
        enabled: yes
    - name: Enable upower.service service
      service:
        name: upower.service
        enabled: yes
    - name: Enable uresourced.service service
      service:
        name: uresourced.service
        enabled: yes
    - name: Enable vboxdrv.service service
      service:
        name: vboxdrv.service
        enabled: yes
    - name: Enable vboxservice.service service
      service:
        name: vboxservice.service
        enabled: yes
    - name: Enable vgauthd.service service
      service:
        name: vgauthd.service
        enabled: yes
    - name: Enable virtnetworkd.service service
      service:
        name: virtnetworkd.service
        enabled: yes
    - name: Enable virtqemud.service service
      service:
        name: virtqemud.service
        enabled: yes
    - name: Enable vmtoolsd.service service
      service:
        name: vmtoolsd.service
        enabled: yes

